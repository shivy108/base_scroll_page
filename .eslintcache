[{"/home/shiv/Projects/base_scroll_page/src/App.jsx":"1","/home/shiv/Projects/base_scroll_page/src/components/state.js":"2"},{"size":11690,"mtime":1607261643033,"results":"3","hashOfConfig":"4"},{"size":135,"mtime":1607173052680,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8","usedDeprecatedRules":"9"},"1ur49fs",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shiv/Projects/base_scroll_page/src/App.jsx",["12","13","14","15","16"],"import { Html, MeshWobbleMaterial } from \"drei\";\nimport { Suspense, useEffect, useRef, useState } from \"react\";\nimport InView, { useInView } from \"react-intersection-observer\";\nimport { useSpring, a } from \"react-spring/three\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport \"./App.scss\";\nimport Header from \"./components/header\";\nimport { Section } from \"./components/section\";\nimport state from \"./components/state\";\nimport laptop from \"./assets/laptop.png\";\nimport netflix from \"./assets/netflix.jpg\";\nimport nike from \"./assets/nike-1.gif\";\nimport scholl from \"./assets/SVGLogo.svg\";\nimport { Physics, useSphere } from \"use-cannon\";\n\nconst Lights = () => {\n  return (\n    <>\n      {/* Ambient Light illuminates lights for all objects */}\n      <ambientLight intensity={0.3} />\n      {/* Diretion light */}\n      <directionalLight position={[-10, -10, 5]} intensity={1} />\n      <pointLight position={[0, 10, 5]} />\n      <pointLight position={[0, -10, -5]} />\n      <directionalLight\n        castShadow\n        position={[0, 10, 0]}\n        intensity={1.5}\n        shadow-mapSize-width={1024}\n        shadow-mapSize-height={1024}\n        shadow-camera-far={50}\n        shadow-camera-left={-10}\n        shadow-camera-right={10}\n        shadow-camera-top={10}\n        shadow-camera-bottom={-10}\n      />\n      {/* Spotlight Large overhead light */}\n      <spotLight intensity={1} position={[1000, 0, 0]} castShadow />\n    </>\n  );\n};\n\nconst SpinningMesh = ({ factor, position, color, speed, args }) => {\n  //ref to target the mesh\n  const mesh = useRef();\n  // const [ref] = useSphere(index => ({\n  //   mass: 1,\n  //   position: [Math.random() - 0.5, Math.random() - 0.5, index * 2],\n  //   args: 1\n  // }))\n\n  //useFrame allows us to re-render/update rotation on each frame\n  useFrame(\n    () => (\n      (mesh.current.rotation.z += 0.01),\n      (mesh.current.rotation.x += 0.002),\n      (mesh.current.rotation.y += 0.001)\n    )\n  );\n\n  \n  return (\n    <mesh\n      position={position}\n      ref={mesh}\n      scale={[40, 40, 40]}\n      castShadow>\n      <sphereGeometry args={[1, 16, 16]} />\n      <MeshWobbleMaterial\n        color={color}\n        speed={speed}\n        attach='material'\n        factor={factor}\n        wireframe\n      />\n    </mesh>\n  );\n};\n\nconst HTMLContent = ({ bgColor, domContent, children, position }) => {\n  const [refItem, InView] = useInView({ threshold: 0 });\n  const [color, setColor] = useState(bgColor);\n  const pallete = [\n    \"#f89672\",\n    \"#4b7c9b\",\n    \"#796c58\",\n    \"#667c66\",\n    \"#486292\",\n    \"#be759a\",\n    \"#487c78\",\n    \"#753e3e\",\n    \"#887719\",\n    \"#948114\",\n    \"#51856b\",\n   \n  ];\n\n  useEffect(() => {\n    InView && (document.body.style.background = color);\n  }, [InView, color]);\n\n  return (\n    <Section factor={1.5} offset={1}>\n      <group position={position}>\n        <Html portal={domContent} fullscreen>\n          <div\n            className='container'\n            onClick={() =>\n              setColor(pallete[Math.floor(Math.random() * pallete.length)])\n            }\n            ref={refItem}>\n            {children}\n          </div>\n        </Html>\n      </group>\n    </Section>\n  );\n};\n\nconst Arrow = () => {\n  const [x, setX] = useState(\"r\");\n  const [y, setY] = useState(\"w\");\n  const [z, setZ] = useState(\"o\");\n  const [a, setA] = useState(\"a\");\n  const [b, setB] = useState(\"s\");\n  const [c, setC] = useState(\"p\");\n  const [d, setD] = useState(\"q\");\n  const [e, setE] = useState(\"g\");\n\n  let characters =\n    \"!@#$%^&*0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n  const charList = characters.split(\"\");\n\n  const scrambleWords = (e) => {\n    if (e) {\n      return (\n        setX(charList[Math.floor(Math.random() * charList.length)]),\n        setA(charList[Math.floor(Math.random() * charList.length)]),\n        setB(charList[Math.floor(Math.random() * charList.length)]),\n        setC(charList[Math.floor(Math.random() * charList.length)]),\n        setD(charList[Math.floor(Math.random() * charList.length)]),\n        setE(charList[Math.floor(Math.random() * charList.length)]),\n        setZ(charList[Math.floor(Math.random() * charList.length)]),\n        setY(charList[Math.floor(Math.random() * charList.length)])\n      );\n    }\n  };\n  return (\n    <div onMouseOver={scrambleWords} className=\"arrow\">\n      <div >\n        {x}\n        {y}\n      </div>\n      <div>\n        {a}\n        {z}\n      </div>\n      <div>\n        {b}\n        {c}\n      </div>\n      <div>scrolldown</div>\n      <div>\n        {d}\n        {z}\n        {e}\n        {a}\n        {b}\n        {d}\n        {c}\n        {y}\n      </div>\n      <div>\n        {x}\n        {a}\n        {d}\n        {e}\n        {b}\n        {z}\n      </div>\n      <div>\n        {c}\n        {a}\n        {z}\n        {d}\n      </div>\n      <div>\n        {d}\n        {e}\n      </div>\n      <div>{a}</div>\n    </div>\n  );\n};\n\nconst Loading = () => {\n  return (\n    <>\n      <div className='loading'>Loading...</div>\n    </>\n  );\n};\n\nfunction App() {\n  const domContent = useRef();\n  const scrollArea = useRef();\n  const onScroll = (e) => (state.top.current = e.target.scrollTop);\n  useEffect(() => void onScroll({ target: scrollArea.current }, []));\n\n  return (\n    <>\n      <Header />\n      <Canvas\n        shadowMap\n        colorManagement\n        camera={{ position: [0, 0, 120], fov: 70 }}>\n        <Lights />\n        <Suspense fallback={Loading}>\n          <Physics/>\n          <SpinningMesh\n            position={[0, 1, 0]}\n            color='#353030'\n            args={[3, 2, 1]}\n            speed={0.1}\n            factor={0.1}\n          />\n          <SpinningMesh\n            position={[-10, -10, -10]}\n            color='#221c1c'\n            args={[3, 2, 1]}\n            speed={0.01}\n            factor={3}\n          />\n          <SpinningMesh\n            position={[10, 10, 10]}\n            color='#221c1c'\n            args={[3, 2, 1]}\n            speed={0.01}\n            factor={2}\n          />\n\n          <HTMLContent\n            bgColor={\"#6d6d60\"}\n            domContent={domContent}\n            position={[0, 250, 0]}>\n            <h1 className='title'>Welcome</h1>\n            <h4 className='subtitle'> Take a look around</h4>\n            <Arrow />\n          </HTMLContent>\n          <HTMLContent\n            bgColor={\"#a38a38\"}\n            domContent={domContent}\n            position={[0, 0, 0]}>\n            <h1 className='title'>jobtracker.ai</h1>\n            <ul className='list'>\n              <li className='tech'>react</li>\n              <li className='tech'>styled components</li>\n              <li className='tech'>django</li>\n              <li className='tech'>redux</li>\n              <li className='tech'>react-pdf</li>\n              <li className='tech'>docker</li>\n            </ul>\n            <div className='description'>\n              <h4>description</h4>\n              <p>\n                jobtracker.ai is a tool to help developers find and apply for\n                jobs. The objective was to add automatic cv and cover letter\n                generation from the user data. I worked on the frontend UI which\n                updates the user profile as well as creating cv and cover letter\n                templates.{\" \"}\n              </p>\n            </div>\n            <img src={laptop} alt='' />\n            <div className='arrow'>scrolldown</div>\n          </HTMLContent>\n          <HTMLContent\n            bgColor={\"#83aaaa\"}\n            domContent={domContent}\n            position={[0, -250, 0]}>\n            <h1 className='title'>netflix clone</h1>\n            <ul className='list'>\n              <li className='tech'>react</li>\n              <li className='tech'>typescript</li>\n              <li className='tech'>styled components</li>\n              <li className='tech'>firebase</li>\n            </ul>\n            <div className='description'>\n              <h4>description</h4>\n              <p>\n                a clone of the netflix web application. This clone does not play\n                full movies, instead it plays a trailer from youtbe{\" \"}\n              </p>\n            </div>\n            <img src={netflix} alt='' />\n            <div className='arrow'>scrolldown</div>\n          </HTMLContent>\n          <HTMLContent\n            bgColor={\"#527252\"}\n            domContent={domContent}\n            position={[0, -500, 0]}>\n            <h1 className='title'>scholl garten und dach</h1>\n            <ul className='list'>\n              <li className='tech'>react</li>\n              <li className='tech'>react-spring</li>\n              <li className='tech'>Netlify</li>\n            </ul>\n            <div className='description'>\n              <h4>description</h4>\n              <p>\n                a static webpage built to be mobile friendly and stand out from\n                the crowd.\n              </p>\n            </div>\n            <img src={scholl} alt='' />\n            <div className='arrow'>scrolldown</div>\n          </HTMLContent>\n          <HTMLContent\n            bgColor={\"#687567\"}\n            domContent={domContent}\n            position={[0, -750, 0]}>\n            <h1 className='title'>online shop</h1>\n            <ul className='list'>\n              <li className='tech'>react</li>\n              <li className='tech'>styled components</li>\n              <li className='tech'>firebase</li>\n            </ul>\n            <div className='description'>\n              <h4>description</h4>\n              <p>fully functional online shop </p>\n            </div>\n            <img src={nike} alt='' />\n            <div className='arrow'>scrolldown</div>\n          </HTMLContent>\n          <HTMLContent\n            bgColor={\"#9e92ac\"}\n            domContent={domContent}\n            position={[0, -1000, 0]}>\n            <h1 className='title'>discovery</h1>\n            <ul className='list'>\n              <li className='tech'>react</li>\n              <li className='tech'>redux</li>\n              <li className='tech'>material ui</li>\n              <li className='tech'>django</li>\n            </ul>\n            <div className='description'>\n              <h4>description</h4>\n              <p>\n                Inspired by COVID-19. Created to encourage medical research and\n                increase medical data.{\" \"}\n              </p>\n            </div>\n            <img src={nike} alt='' />\n            <div className='arrow'>scrolldown</div>\n          </HTMLContent>\n          <HTMLContent\n            bgColor={\"#9c5c87\"}\n            domContent={domContent}\n            position={[0, -1250, 0]}>\n            <h1 className='title'>stundä</h1>\n            <ul className='list'>\n              <li className='tech'>Angular</li>\n              <li className='tech'>Django</li>\n              <li className='tech'>AWS</li>\n            </ul>\n            <div className='description'>\n              <h4>description</h4>\n              <p>\n                Inspired by my time working as a gardener. This is an app used\n                to record working hours{\" \"}\n              </p>\n            </div>\n            <img src={netflix} alt='' />\n            <div className='arrow'>scrolldown</div>\n          </HTMLContent>\n          <HTMLContent\n            bgColor={\"#c47c7c\"}\n            domContent={domContent}\n            position={[0, -1500, 0]}>\n            <h1 className='title'>like what you see?</h1>\n            <h4 className='subtitle'> Get in touch...</h4>\n          </HTMLContent>\n        </Suspense>\n      </Canvas>\n      <div className='scrollArea' ref={scrollArea} onScroll={onScroll}>\n        <div style={{ position: \"sticky\", top: 0 }} ref={domContent}></div>\n        <div style={{ height: `${state.sections * 100}vh` }}></div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n",["17","18"],"/home/shiv/Projects/base_scroll_page/src/components/state.js",[],{"ruleId":"19","severity":1,"message":"20","line":3,"column":8,"nodeType":"21","messageId":"22","endLine":3,"endColumn":14},{"ruleId":"19","severity":1,"message":"23","line":4,"column":10,"nodeType":"21","messageId":"22","endLine":4,"endColumn":19},{"ruleId":"19","severity":1,"message":"24","line":4,"column":21,"nodeType":"21","messageId":"22","endLine":4,"endColumn":22},{"ruleId":"19","severity":1,"message":"25","line":14,"column":19,"nodeType":"21","messageId":"22","endLine":14,"endColumn":28},{"ruleId":"26","severity":1,"message":"27","line":55,"column":40,"nodeType":"28","messageId":"29","endLine":55,"endColumn":41},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},"no-unused-vars","'InView' is defined but never used.","Identifier","unusedVar","'useSpring' is defined but never used.","'a' is defined but never used.","'useSphere' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-global-assign","no-unsafe-negation"]